########################################################################################
# Project: 
#   Managed Kubernetes Services: A Comparison of AKS, EKS and GKE
#
# Author:  
#   Michał Ziemianek
#
# Description:
#   The project focuses on deploying and benchmarking
#   a microservices-based application using Kubernetes and cloud-native technologies
#   (Terraform, Ansible, Helm, Prometheus, Grafana, K6).
#
# License:
#   Apache 2.0
#
# Notes:
#   - This code is intended for educational and research purposes.
#   - Ensure proper configuration of cloud resources before execution.
#
# © 2025 Michał Ziemianek. All rights reserved.
########################################################################################
---

- name: "{{ service_name }} | Render template and apply Terraform"
  block:
    # TODO: make this a loop
    - name: "{{ service_name }} | Render cluster-ingress values template"
      ansible.builtin.template:
        src: "{{ cluster_ingress_values_template_path }}"
        dest: "{{ cluster_ingress_values_rendered_template_path }}"
        mode: "0644"

    - name: "{{ service_name }} | Render kube-prometheus-stack values template"
      ansible.builtin.template:
        src: "{{ monitoring_values_template_path }}"
        dest: "{{ monitoring_values_rendered_template_path }}"
        mode: "0644"

    - name: "{{ service_name }} | Google Cloud GKE Cluster Addons"
      ansible.builtin.include_tasks: "{{ mode }}.yaml"

  always:
    - name: "{{ service_name }} | Cleanup rendered template"
      ansible.builtin.file:
        path: "{{ cluster_ingress_values_rendered_template_path }}"
        state: absent
