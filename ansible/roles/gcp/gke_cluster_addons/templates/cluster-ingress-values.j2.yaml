########################################################################################
# Project: 
#   Managed Kubernetes Services: A Comparison of AKS, EKS and GKE
#
# Author:  
#   Michał Ziemianek
#
# Description:
#   The project focuses on deploying and benchmarking
#   a microservices-based application using Kubernetes and cloud-native technologies
#   (Terraform, Ansible, Helm, Prometheus, Grafana, K6).
#
# License:
#   Apache 2.0
#
# Notes:
#   - This code is intended for educational and research purposes.
#   - Ensure proper configuration of cloud resources before execution.
#
# © 2025 Michał Ziemianek. All rights reserved.
########################################################################################

# Default values for istio-ingress-gateway-chart

# Domain configuration
domain:
  name: "{{ dns_domain_name }}"

# Certificate Manager configuration
certManager:
  email: "{{ vault_dns_email }}"
  server: "https://acme-v02.api.letsencrypt.org/directory"
  privateKeySecretRef:
    name: "letsencrypt-prod-account-key"
  apiTokenSecretRef:
    name: "cloudflare-api-token-secret"
    key: "api-token"
# Certificate configuration
certificate:
  name: "istio-ingress-cert"
  namespace: "istio-ingress"
  secretName: "istio-ingress-cert"

# ClusterIssuer configuration
clusterIssuer:
  name: "letsencrypt-prod-ci"
  namespace: "istio-ingress"

# Gateway configuration
gateway:
  name: "istio-ingress-gateway"
  namespace: "istio-ingress"
  selector:
    istio: "ingress-gateway"
  http:
    port: 80
    name: "http"
  https:
    port: 443
    name: "https"
    credentialName: "istio-ingress-cert"

# Secret configuration
secret:
  name: cloudflare-api-token-secret
  namespace: cert-manager
  type: Opaque
  apiToken: {{ vault_cloudflare_token }}

# Virtual Service configuration
virtualService:
  name: "istio-ingress-vs"
  namespace: "istio-ingress"
  gatewayRef: "istio-ingress-gateway"
  hosts:
    applicationDomain: "{{ dns_domain_name }}"
  routes:
    frontend:
      host: "frontend.{{ app_name }}.svc.cluster.local"
      port: 80
