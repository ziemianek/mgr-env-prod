########################################################################################
# Project: 
#   Managed Kubernetes Services: A Comparison of AKS, EKS and GKE
#
# Author:  
#   Michał Ziemianek
#
# Description:
#   The project focuses on deploying and benchmarking
#   a microservices-based application using Kubernetes and cloud-native technologies
#   (Terraform, Ansible, Helm, Prometheus, Grafana, K6).
#
# License:
#   Apache 2.0
#
# Notes:
#   - This code is intended for educational and research purposes.
#   - Ensure proper configuration of cloud resources before execution.
#
# © 2025 Michał Ziemianek. All rights reserved.
########################################################################################
---

# TODO: make this a common role for all clouds

# Wrapped in a block to pass env variables
# https://github.com/ansible/ansible/issues/53626
- name: "{{ service_name }} | Block wrapper"
  environment:
    KUBECONFIG: "{{ k8s_kubeconfig_path }}"
  block:
    - name: "{{ service_name }} | Get kubeconfig for the '{{ cluster_name }}' cluster"
      ansible.builtin.command: >
        gcloud container clusters get-credentials {{ cluster_name }}
        --project {{ gcp_project_id }}
        --region {{ gcp_region }}
      changed_when: true

    - name: "{{ service_name }} | Get Cluster Ingress IP Address"
      ansible.builtin.command: |
        kubectl get svc -n istio-ingress -o jsonpath='{.items[*].status.loadBalancer.ingress[*].ip}'
      register: cluster_ingress_ip_address
      changed_when: true

    - name: "{{ service_name }} | Print IP Address"
      ansible.builtin.debug:
        msg: "Cluster Ingress IP Address: {{ cluster_ingress_ip_address.stdout }}"
  always:
    - name: "{{ service_name }} | Clean kubeconfig"
      ansible.builtin.file:
        path: "{{ k8s_kubeconfig_path }}"
        state: absent
