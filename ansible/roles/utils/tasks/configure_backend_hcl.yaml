########################################################################################
# Project: 
#   Managed Kubernetes Services: A Comparison of AKS, EKS and GKE
#
# Author:  
#   Michał Ziemianek
#
# Description:
#   The project focuses on deploying and benchmarking
#   a microservices-based application using Kubernetes and cloud-native technologies
#   (Terraform, Ansible, Helm, Prometheus, Grafana, K6).
#
# License:
#   Apache 2.0
#
# Notes:
#   - This code is intended for educational and research purposes.
#   - Ensure proper configuration of cloud resources before execution.
#
# © 2025 Michał Ziemianek. All rights reserved.
########################################################################################
---

- name: "Fail if this task is not run from within tfstate_bucket role."
  ansible.builtin.fail:
    msg: "This task can only be run from within tfstate_bucket role."
  when: ansible_parent_role_names != "tfstate_bucket"

- name: Set bucket name with random suffix
  ansible.builtin.set_fact:
    tfstate_bucket_name: "terraform-state-{{ lookup('community.general.random_string', length=10, upper=false, special=false) }}"

- name: Debug final bucket name
  ansible.builtin.debug:
    msg: "Using bucket: {{ tfstate_bucket_name }}"

- name: Find all backend.hcl files in repo
  ansible.builtin.find:
    paths: "{{ role_path }}/../{{ cloud_name }}/"
    patterns: "backend.hcl"
    recurse: yes
  register: backend_files

- name: Update bucket name in backend.hcl files
  ansible.builtin.lineinfile:
    path: "{{ item.path }}"
    regexp: '^bucket\s*='
    line: 'bucket  = "{{ tfstate_bucket_name }}"'
    backrefs: true
  loop: "{{ backend_files.files }}"
  loop_control:
    label: "{{ item.path }}"
